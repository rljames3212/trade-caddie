// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tradepb.proto

package tradepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Trade_Type int32

const (
	Trade_BUY  Trade_Type = 0
	Trade_SELL Trade_Type = 1
)

var Trade_Type_name = map[int32]string{
	0: "BUY",
	1: "SELL",
}

var Trade_Type_value = map[string]int32{
	"BUY":  0,
	"SELL": 1,
}

func (x Trade_Type) String() string {
	return proto.EnumName(Trade_Type_name, int32(x))
}

func (Trade_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{0, 0}
}

type Trade struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 Trade_Type `protobuf:"varint,2,opt,name=type,proto3,enum=trade.Trade_Type" json:"type,omitempty"`
	Market               string     `protobuf:"bytes,3,opt,name=market,proto3" json:"market,omitempty"`
	Price                float32    `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Amount               float32    `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee                  float32    `protobuf:"fixed32,6,opt,name=fee,proto3" json:"fee,omitempty"`
	Total                float32    `protobuf:"fixed32,7,opt,name=total,proto3" json:"total,omitempty"`
	FiatInd              bool       `protobuf:"varint,8,opt,name=fiat_ind,json=fiatInd,proto3" json:"fiat_ind,omitempty"`
	Date                 string     `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{0}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trade) GetType() Trade_Type {
	if m != nil {
		return m.Type
	}
	return Trade_BUY
}

func (m *Trade) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Trade) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Trade) GetFee() float32 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Trade) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Trade) GetFiatInd() bool {
	if m != nil {
		return m.FiatInd
	}
	return false
}

func (m *Trade) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type AddTradeRequest struct {
	Trade                *Trade   `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	PortfolioId          int32    `protobuf:"varint,2,opt,name=portfolioId,proto3" json:"portfolioId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTradeRequest) Reset()         { *m = AddTradeRequest{} }
func (m *AddTradeRequest) String() string { return proto.CompactTextString(m) }
func (*AddTradeRequest) ProtoMessage()    {}
func (*AddTradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{1}
}

func (m *AddTradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTradeRequest.Unmarshal(m, b)
}
func (m *AddTradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTradeRequest.Marshal(b, m, deterministic)
}
func (m *AddTradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTradeRequest.Merge(m, src)
}
func (m *AddTradeRequest) XXX_Size() int {
	return xxx_messageInfo_AddTradeRequest.Size(m)
}
func (m *AddTradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTradeRequest proto.InternalMessageInfo

func (m *AddTradeRequest) GetTrade() *Trade {
	if m != nil {
		return m.Trade
	}
	return nil
}

func (m *AddTradeRequest) GetPortfolioId() int32 {
	if m != nil {
		return m.PortfolioId
	}
	return 0
}

type AddTradeResponse struct {
	TradeId              string   `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTradeResponse) Reset()         { *m = AddTradeResponse{} }
func (m *AddTradeResponse) String() string { return proto.CompactTextString(m) }
func (*AddTradeResponse) ProtoMessage()    {}
func (*AddTradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{2}
}

func (m *AddTradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTradeResponse.Unmarshal(m, b)
}
func (m *AddTradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTradeResponse.Marshal(b, m, deterministic)
}
func (m *AddTradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTradeResponse.Merge(m, src)
}
func (m *AddTradeResponse) XXX_Size() int {
	return xxx_messageInfo_AddTradeResponse.Size(m)
}
func (m *AddTradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTradeResponse proto.InternalMessageInfo

func (m *AddTradeResponse) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

type DeleteTradeRequest struct {
	TradeId              int32    `protobuf:"varint,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	PortfolioId          int32    `protobuf:"varint,2,opt,name=portfolioId,proto3" json:"portfolioId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTradeRequest) Reset()         { *m = DeleteTradeRequest{} }
func (m *DeleteTradeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTradeRequest) ProtoMessage()    {}
func (*DeleteTradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{3}
}

func (m *DeleteTradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTradeRequest.Unmarshal(m, b)
}
func (m *DeleteTradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTradeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTradeRequest.Merge(m, src)
}
func (m *DeleteTradeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTradeRequest.Size(m)
}
func (m *DeleteTradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTradeRequest proto.InternalMessageInfo

func (m *DeleteTradeRequest) GetTradeId() int32 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *DeleteTradeRequest) GetPortfolioId() int32 {
	if m != nil {
		return m.PortfolioId
	}
	return 0
}

type DeleteTradeResponse struct {
	DeletedCount         int32    `protobuf:"varint,1,opt,name=deletedCount,proto3" json:"deletedCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTradeResponse) Reset()         { *m = DeleteTradeResponse{} }
func (m *DeleteTradeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTradeResponse) ProtoMessage()    {}
func (*DeleteTradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{4}
}

func (m *DeleteTradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTradeResponse.Unmarshal(m, b)
}
func (m *DeleteTradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTradeResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTradeResponse.Merge(m, src)
}
func (m *DeleteTradeResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTradeResponse.Size(m)
}
func (m *DeleteTradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTradeResponse proto.InternalMessageInfo

func (m *DeleteTradeResponse) GetDeletedCount() int32 {
	if m != nil {
		return m.DeletedCount
	}
	return 0
}

type UpdateTradeRequest struct {
	TradeId              int32    `protobuf:"varint,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	PortfolioId          int32    `protobuf:"varint,2,opt,name=portfolioId,proto3" json:"portfolioId,omitempty"`
	Trade                *Trade   `protobuf:"bytes,3,opt,name=trade,proto3" json:"trade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTradeRequest) Reset()         { *m = UpdateTradeRequest{} }
func (m *UpdateTradeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTradeRequest) ProtoMessage()    {}
func (*UpdateTradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{5}
}

func (m *UpdateTradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTradeRequest.Unmarshal(m, b)
}
func (m *UpdateTradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTradeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTradeRequest.Merge(m, src)
}
func (m *UpdateTradeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTradeRequest.Size(m)
}
func (m *UpdateTradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTradeRequest proto.InternalMessageInfo

func (m *UpdateTradeRequest) GetTradeId() int32 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *UpdateTradeRequest) GetPortfolioId() int32 {
	if m != nil {
		return m.PortfolioId
	}
	return 0
}

func (m *UpdateTradeRequest) GetTrade() *Trade {
	if m != nil {
		return m.Trade
	}
	return nil
}

type UpdateTradeResponse struct {
	ModifiedCount        int32    `protobuf:"varint,1,opt,name=modifiedCount,proto3" json:"modifiedCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTradeResponse) Reset()         { *m = UpdateTradeResponse{} }
func (m *UpdateTradeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTradeResponse) ProtoMessage()    {}
func (*UpdateTradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{6}
}

func (m *UpdateTradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTradeResponse.Unmarshal(m, b)
}
func (m *UpdateTradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTradeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTradeResponse.Merge(m, src)
}
func (m *UpdateTradeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTradeResponse.Size(m)
}
func (m *UpdateTradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTradeResponse proto.InternalMessageInfo

func (m *UpdateTradeResponse) GetModifiedCount() int32 {
	if m != nil {
		return m.ModifiedCount
	}
	return 0
}

type GetTradeRequest struct {
	TradeId              int32    `protobuf:"varint,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	PortfolioId          int32    `protobuf:"varint,2,opt,name=portfolioId,proto3" json:"portfolioId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTradeRequest) Reset()         { *m = GetTradeRequest{} }
func (m *GetTradeRequest) String() string { return proto.CompactTextString(m) }
func (*GetTradeRequest) ProtoMessage()    {}
func (*GetTradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{7}
}

func (m *GetTradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTradeRequest.Unmarshal(m, b)
}
func (m *GetTradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTradeRequest.Marshal(b, m, deterministic)
}
func (m *GetTradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTradeRequest.Merge(m, src)
}
func (m *GetTradeRequest) XXX_Size() int {
	return xxx_messageInfo_GetTradeRequest.Size(m)
}
func (m *GetTradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTradeRequest proto.InternalMessageInfo

func (m *GetTradeRequest) GetTradeId() int32 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *GetTradeRequest) GetPortfolioId() int32 {
	if m != nil {
		return m.PortfolioId
	}
	return 0
}

type GetTradeResponse struct {
	Trade                *Trade   `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTradeResponse) Reset()         { *m = GetTradeResponse{} }
func (m *GetTradeResponse) String() string { return proto.CompactTextString(m) }
func (*GetTradeResponse) ProtoMessage()    {}
func (*GetTradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c05b0caf8a109112, []int{8}
}

func (m *GetTradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTradeResponse.Unmarshal(m, b)
}
func (m *GetTradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTradeResponse.Marshal(b, m, deterministic)
}
func (m *GetTradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTradeResponse.Merge(m, src)
}
func (m *GetTradeResponse) XXX_Size() int {
	return xxx_messageInfo_GetTradeResponse.Size(m)
}
func (m *GetTradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTradeResponse proto.InternalMessageInfo

func (m *GetTradeResponse) GetTrade() *Trade {
	if m != nil {
		return m.Trade
	}
	return nil
}

func init() {
	proto.RegisterEnum("trade.Trade_Type", Trade_Type_name, Trade_Type_value)
	proto.RegisterType((*Trade)(nil), "trade.Trade")
	proto.RegisterType((*AddTradeRequest)(nil), "trade.AddTradeRequest")
	proto.RegisterType((*AddTradeResponse)(nil), "trade.AddTradeResponse")
	proto.RegisterType((*DeleteTradeRequest)(nil), "trade.DeleteTradeRequest")
	proto.RegisterType((*DeleteTradeResponse)(nil), "trade.DeleteTradeResponse")
	proto.RegisterType((*UpdateTradeRequest)(nil), "trade.UpdateTradeRequest")
	proto.RegisterType((*UpdateTradeResponse)(nil), "trade.UpdateTradeResponse")
	proto.RegisterType((*GetTradeRequest)(nil), "trade.GetTradeRequest")
	proto.RegisterType((*GetTradeResponse)(nil), "trade.GetTradeResponse")
}

func init() { proto.RegisterFile("tradepb.proto", fileDescriptor_c05b0caf8a109112) }

var fileDescriptor_c05b0caf8a109112 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x6a, 0xdb, 0x40,
	0x10, 0xc7, 0x2d, 0x59, 0xb2, 0xe4, 0xb1, 0x93, 0xa8, 0x93, 0x92, 0xae, 0x7d, 0x12, 0x4b, 0x0b,
	0x3e, 0x14, 0x1f, 0x5c, 0x28, 0x94, 0xd2, 0x43, 0xd3, 0x2f, 0x0c, 0x29, 0x14, 0x25, 0xa1, 0xb4,
	0x97, 0xa2, 0x74, 0xd7, 0x20, 0x6a, 0x7b, 0xb7, 0xf2, 0xa6, 0x90, 0x77, 0xe9, 0x73, 0xf6, 0x5c,
	0x76, 0x24, 0xcb, 0x92, 0x9c, 0xd2, 0x1c, 0x72, 0x11, 0x3b, 0xff, 0x9d, 0x99, 0x9d, 0xf9, 0xcd,
	0x20, 0x38, 0x30, 0x79, 0x2a, 0xa4, 0xbe, 0x9a, 0xea, 0x5c, 0x19, 0x85, 0x3e, 0x99, 0xfc, 0x8f,
	0x03, 0xfe, 0x85, 0x3d, 0xe1, 0x21, 0xb8, 0x99, 0x60, 0x4e, 0xec, 0x4c, 0xfa, 0x89, 0x9b, 0x09,
	0x7c, 0x02, 0x9e, 0xb9, 0xd1, 0x92, 0xb9, 0xb1, 0x33, 0x39, 0x9c, 0x3d, 0x98, 0x92, 0xff, 0xf4,
	0xa2, 0xf8, 0xde, 0x68, 0x99, 0xd0, 0x35, 0x9e, 0x40, 0x6f, 0x95, 0xe6, 0x3f, 0xa4, 0x61, 0x5d,
	0x0a, 0x2d, 0x2d, 0x7c, 0x08, 0xbe, 0xce, 0xb3, 0xef, 0x92, 0x79, 0xb1, 0x33, 0x71, 0x93, 0xc2,
	0xb0, 0xde, 0xe9, 0x4a, 0x5d, 0xaf, 0x0d, 0xf3, 0x49, 0x2e, 0x2d, 0x8c, 0xa0, 0xbb, 0x90, 0x92,
	0xf5, 0x48, 0xb4, 0x47, 0x1b, 0x6f, 0x94, 0x49, 0x97, 0x2c, 0x28, 0xe2, 0xc9, 0xc0, 0x11, 0x84,
	0x8b, 0x2c, 0x35, 0xdf, 0xb2, 0xb5, 0x60, 0x61, 0xec, 0x4c, 0xc2, 0x24, 0xb0, 0xf6, 0x7c, 0x2d,
	0x10, 0xc1, 0x13, 0xa9, 0x91, 0xac, 0x4f, 0x65, 0xd0, 0x99, 0x8f, 0xc0, 0xb3, 0xa5, 0x62, 0x00,
	0xdd, 0xd3, 0xcb, 0x2f, 0x51, 0x07, 0x43, 0xf0, 0xce, 0xdf, 0x9d, 0x9d, 0x45, 0x0e, 0xff, 0x0c,
	0x47, 0xaf, 0x85, 0xa0, 0x76, 0x12, 0xf9, 0xf3, 0x5a, 0x6e, 0x0c, 0x72, 0x28, 0xa0, 0x10, 0x84,
	0xc1, 0x6c, 0x58, 0x6f, 0x39, 0x29, 0xae, 0x30, 0x86, 0x81, 0x56, 0xb9, 0x59, 0xa8, 0x65, 0xa6,
	0xe6, 0x82, 0xe0, 0xf8, 0x49, 0x5d, 0xe2, 0x4f, 0x21, 0xda, 0x25, 0xde, 0x68, 0xb5, 0xde, 0x48,
	0x64, 0x10, 0x50, 0xf8, 0x7c, 0x0b, 0x78, 0x6b, 0xf2, 0x4f, 0x80, 0x6f, 0xe5, 0x52, 0x1a, 0xd9,
	0xa8, 0xa4, 0xe5, 0xef, 0x57, 0xfe, 0x77, 0x78, 0xff, 0x05, 0x1c, 0x37, 0x32, 0x96, 0x25, 0x70,
	0x18, 0x0a, 0x92, 0xc5, 0x1b, 0xe2, 0x5f, 0xe4, 0x6d, 0x68, 0xdc, 0x00, 0x5e, 0x6a, 0x0b, 0xee,
	0xbe, 0x8a, 0xd9, 0x21, 0xed, 0xfe, 0x13, 0x29, 0x7f, 0x09, 0xc7, 0x8d, 0x57, 0xcb, 0x82, 0x1f,
	0xc3, 0xc1, 0x4a, 0x89, 0x6c, 0x91, 0x35, 0x2b, 0x6e, 0x8a, 0xfc, 0x23, 0x1c, 0x7d, 0x90, 0xe6,
	0xde, 0xe0, 0x3d, 0x87, 0x68, 0x97, 0xae, 0x22, 0xf7, 0xdf, 0xb5, 0x98, 0xfd, 0x76, 0x61, 0x48,
	0xc2, 0xb9, 0xcc, 0x7f, 0xd9, 0x45, 0x7f, 0x05, 0xe1, 0x76, 0x0b, 0xf0, 0xa4, 0x8c, 0x68, 0xed,
	0xdb, 0xf8, 0xd1, 0x9e, 0x5e, 0xbc, 0xc8, 0x3b, 0xf8, 0x1e, 0x06, 0xb5, 0x21, 0xe2, 0xa8, 0xf4,
	0xdc, 0x5f, 0x95, 0xf1, 0xf8, 0xb6, 0xab, 0x7a, 0x9e, 0x1a, 0xdb, 0x2a, 0xcf, 0xfe, 0x94, 0xab,
	0x3c, 0xb7, 0x8c, 0x82, 0x77, 0x6c, 0x3b, 0x5b, 0x2e, 0x55, 0x3b, 0x2d, 0xee, 0x55, 0x3b, 0x6d,
	0x80, 0xbc, 0x73, 0xda, 0xff, 0x1a, 0x94, 0x7f, 0x9f, 0xab, 0x1e, 0xfd, 0x7e, 0x9e, 0xfd, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x5d, 0x84, 0xae, 0xa6, 0x8f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradeServiceClient is the client API for TradeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradeServiceClient interface {
	AddTrade(ctx context.Context, in *AddTradeRequest, opts ...grpc.CallOption) (*AddTradeResponse, error)
	DeleteTrade(ctx context.Context, in *DeleteTradeRequest, opts ...grpc.CallOption) (*DeleteTradeResponse, error)
	UpdateTrade(ctx context.Context, in *UpdateTradeRequest, opts ...grpc.CallOption) (*UpdateTradeResponse, error)
	GetTrade(ctx context.Context, in *GetTradeRequest, opts ...grpc.CallOption) (*GetTradeResponse, error)
}

type tradeServiceClient struct {
	cc *grpc.ClientConn
}

func NewTradeServiceClient(cc *grpc.ClientConn) TradeServiceClient {
	return &tradeServiceClient{cc}
}

func (c *tradeServiceClient) AddTrade(ctx context.Context, in *AddTradeRequest, opts ...grpc.CallOption) (*AddTradeResponse, error) {
	out := new(AddTradeResponse)
	err := c.cc.Invoke(ctx, "/trade.TradeService/AddTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeServiceClient) DeleteTrade(ctx context.Context, in *DeleteTradeRequest, opts ...grpc.CallOption) (*DeleteTradeResponse, error) {
	out := new(DeleteTradeResponse)
	err := c.cc.Invoke(ctx, "/trade.TradeService/DeleteTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeServiceClient) UpdateTrade(ctx context.Context, in *UpdateTradeRequest, opts ...grpc.CallOption) (*UpdateTradeResponse, error) {
	out := new(UpdateTradeResponse)
	err := c.cc.Invoke(ctx, "/trade.TradeService/UpdateTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeServiceClient) GetTrade(ctx context.Context, in *GetTradeRequest, opts ...grpc.CallOption) (*GetTradeResponse, error) {
	out := new(GetTradeResponse)
	err := c.cc.Invoke(ctx, "/trade.TradeService/GetTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TradeServiceServer is the server API for TradeService service.
type TradeServiceServer interface {
	AddTrade(context.Context, *AddTradeRequest) (*AddTradeResponse, error)
	DeleteTrade(context.Context, *DeleteTradeRequest) (*DeleteTradeResponse, error)
	UpdateTrade(context.Context, *UpdateTradeRequest) (*UpdateTradeResponse, error)
	GetTrade(context.Context, *GetTradeRequest) (*GetTradeResponse, error)
}

// UnimplementedTradeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTradeServiceServer struct {
}

func (*UnimplementedTradeServiceServer) AddTrade(ctx context.Context, req *AddTradeRequest) (*AddTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTrade not implemented")
}
func (*UnimplementedTradeServiceServer) DeleteTrade(ctx context.Context, req *DeleteTradeRequest) (*DeleteTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTrade not implemented")
}
func (*UnimplementedTradeServiceServer) UpdateTrade(ctx context.Context, req *UpdateTradeRequest) (*UpdateTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTrade not implemented")
}
func (*UnimplementedTradeServiceServer) GetTrade(ctx context.Context, req *GetTradeRequest) (*GetTradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrade not implemented")
}

func RegisterTradeServiceServer(s *grpc.Server, srv TradeServiceServer) {
	s.RegisterService(&_TradeService_serviceDesc, srv)
}

func _TradeService_AddTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServiceServer).AddTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trade.TradeService/AddTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServiceServer).AddTrade(ctx, req.(*AddTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradeService_DeleteTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServiceServer).DeleteTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trade.TradeService/DeleteTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServiceServer).DeleteTrade(ctx, req.(*DeleteTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradeService_UpdateTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServiceServer).UpdateTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trade.TradeService/UpdateTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServiceServer).UpdateTrade(ctx, req.(*UpdateTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TradeService_GetTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServiceServer).GetTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trade.TradeService/GetTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServiceServer).GetTrade(ctx, req.(*GetTradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TradeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trade.TradeService",
	HandlerType: (*TradeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTrade",
			Handler:    _TradeService_AddTrade_Handler,
		},
		{
			MethodName: "DeleteTrade",
			Handler:    _TradeService_DeleteTrade_Handler,
		},
		{
			MethodName: "UpdateTrade",
			Handler:    _TradeService_UpdateTrade_Handler,
		},
		{
			MethodName: "GetTrade",
			Handler:    _TradeService_GetTrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tradepb.proto",
}
